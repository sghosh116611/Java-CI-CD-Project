pipeline {
    agent {
        docker {  
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' 
        }
    }

    stages {
        stage('Checkout') {
            steps {
                //Checkout the code from GitHub repository
                sh 'echo Checkedout git repository'
                git 'https://github.com/sghosh116611/Java-CI-CD-Project.git'
            }
        }
        stage('Build') {
            steps {

                // Build image
                sh "cd spring-boot-app && mvn clean package"
            }
        }
        // stage('Static Code Analysis'){
        //     envrionment{
        //         SONAR_URL = ""
        //     }
        //     steps{
        //         withCredentials([usernamePassword(clientID: "sonarQube", variable = "SONAR_AUTH_TOKEN")]){
        //             sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL} -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=300'
        //         }
        //     }
        // }
        stage('Docker build & Push'){
            environment{
                DOCKER_IMAGE = "ghoshsoumojit53/ci-cd-project-java:${BUILD_NUMBER}"
            }
            steps{
                    script{
                        sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                        def dockerImage = docker.image("${DOCKER_IMAGE}")
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub_credential') {
                            dockerImage.push()
                        }
                    }
            }
        }
    }
}
